name: Go

on:
  push:
    branches: ["main"]
    tags: ["v*"] # Déclenche aussi le workflow quand un tag est poussé
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.5"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  build-multiarch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.5"

      - name: Build binaries for multiple architectures
        run: |
          mkdir -p dist

          # Linux
          GOOS=linux GOARCH=amd64 go build -o dist/gosh-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o dist/gosh-linux-arm64

          # Windows
          GOOS=windows GOARCH=amd64 go build -o dist/gosh-windows-amd64.exe
          GOOS=windows GOARCH=arm64 go build -o dist/gosh-windows-arm64.exe

          # macOS
          GOOS=darwin GOARCH=amd64 go build -o dist/gosh-mac-amd64
          GOOS=darwin GOARCH=arm64 go build -o dist/gosh-mac-arm64

          ls -lh dist/

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gosh-binaries
          path: dist/

  release:
    needs: build-multiarch
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # Exécuter uniquement pour les tags commençant par "v"
    steps:
      - uses: actions/checkout@v4

      - name: Download built binaries
        uses: actions/download-artifact@v4
        with:
          name: gosh-binaries
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
permissions:
  contents: write # Permet de manipuler le contenu du repo
  issues: write # Permet de créer des issues, si nécessaire pour le release
  pull-requests: write # Autorise la gestion des PRs
  actions: write # Permet de gérer les workflows
  pages: write # Si tu utilises GitHub Pages
  discussions: write # Si tu utilises Discussions
